<?php

namespace Rotis\CourseMakerBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\EntityRepository;
use Doctrine\Tests\Common\Annotations\Null;
use Symfony\Component\Validator\Constraints\Collection;

/**
 * JoueurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JoueurRepository extends EntityRepository
{
    public function findENameJLike($mot)
    {
        $mot["mot"] = "%".$mot["mot"]."%";
        $qb = $this
            ->createQueryBuilder('j');
            $qb->where('j.nom LIKE :mot' )
                ->setParameter('mot', array($mot));//'%'.$mot.'%'

        $query = $qb->getQuery();
        $joueurs = $query->getResult();
        $listeEquipes = new ArrayCollection();
        foreach($joueurs as $joueur)
        {
           $Equipe = $joueur->getEquipe();
           if(!($listeEquipes->contains($Equipe)))
            {
                $listeEquipes->add($Equipe);
            }
        }

        return $listeEquipes;
    }

    public function findJWithoutMail()
    {
        $qb = $this->createQueryBuilder('j');
        $qb->where('j.email is NULL')
            ->andWhere('j.telephone is NOT NULL');
        $query = $qb->getQuery();
        $joueurs = $query->getResult();
        return $joueurs;
    }

    public function fidJWithoutMailNorTel()
    {
        $qb = $this->createQueryBuilder('j');
        $qb->where('j.email is NULL')
            ->andWhere('j.telephone is NULL');
        $query = $qb->getQuery();
        $joueurs = $query->getResult();
        return $joueurs;
    }
}
